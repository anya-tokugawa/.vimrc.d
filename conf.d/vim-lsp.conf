Plugin 'prabirshrestha/async.vim'
Plugin 'prabirshrestha/vim-lsp'
Plugin 'mattn/vim-lsp-settings'
Plugin 'mattn/vim-lsp-icons'
Plugin 'jackguo380/vim-lsp-cxx-highlight'
Plugin 'prabirshrestha/asyncomplete.vim'
Plugin 'prabirshrestha/asyncomplete-lsp.vim'
Plugin 'keremc/asyncomplete-clang.vim'
Plugin 'high-moctane/asyncomplete-nextword.vim'
Plugin 'prabirshrestha/asyncomplete-file.vim'



let g:lsp_log_file = expand('~/vim-lsp.log')

let g:asyncomplete_auto_popup = 1
let g:asyncomplete_popup_delay = 200
let g:asyncomplete_auto_completeopt = 1

" set completeopt=menuone,noinsert,noselect,preview
set completeopt=menuone
autocmd! CompleteDone * if pumvisible() == 0 | pclose | endif

autocmd User asyncomplete_setup call asyncomplete#register_source(
    \ asyncomplete#sources#clang#get_source_options())

call asyncomplete#register_source(asyncomplete#sources#nextword#get_source_options({
            \   'name': 'nextword',
            \   'allowlist': ['*'],
            \   'args': ['-n', '10000'],
            \   'completor': function('asyncomplete#sources#nextword#completor')
            \   }))

au User asyncomplete_setup call asyncomplete#register_source(asyncomplete#sources#file#get_source_options({
    \ 'name': 'file',
    \ 'allowlist': ['*'],
    \ 'priority': 10,
    \ 'completor': function('asyncomplete#sources#file#completor')
    \ }))


" autocmd FileType cpp setlocal omnifunc=lsp#complete

let g:lsp_diagnostics_enabled = 1
" show diagnostics mesg to status bar
let g:lsp_diagnostics_echo_cursor = 1
let g:lsp_document_highlight_enabled = 0
let g:lsp_cxx_hl_use_text_props = 1

highlight lspReference ctermfg=red guifg=red ctermbg=black guibg=black


" save document with DocumentFormat
autocmd BufWritePre <buffer> LspDocumentFormatSync

